package jp.tf_web.fukuonsample;

import android.app.Activity;
import android.media.AudioFormat;
import android.media.AudioRecord;
import android.media.MediaRecorder;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

public class MainActivity extends Activity {
	final static int SAMPLING_RATE = 11025;
	AudioRecord audioRec = null;
	int bufSize;

	boolean bIsRecording = false;
	Button btnRec;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		// バッファサイズの計算
		bufSize = AudioRecord.getMinBufferSize(SAMPLING_RATE,
				AudioFormat.CHANNEL_OUT_MONO,
				AudioFormat.ENCODING_PCM_16BIT) * 2;
		// AudioRecordの作成
		audioRec = new AudioRecord(MediaRecorder.AudioSource.MIC,
				SAMPLING_RATE, AudioFormat.CHANNEL_OUT_MONO,
				AudioFormat.ENCODING_PCM_16BIT, bufSize);

		btnRec = (Button) findViewById(R.id.btnRec);
		btnRec.setOnClickListener(clickBtnRec);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	private OnClickListener clickBtnRec = new OnClickListener() {
		@Override
		public void onClick(View arg0) {
			if (bIsRecording) {
				//二回目は録音を停止
				bIsRecording = false;
				return;
			}			
			// 録音開始
			audioRec.startRecording();
			bIsRecording = true;
			// 録音スレッド
			new Thread(new Runnable() {
				@Override
				public void run() {
					byte buf[] = new byte[bufSize];
					while (bIsRecording) {
						// 録音データ読み込み
						audioRec.read(buf, 0, buf.length);
						Log.v("AudioRecord", "read " + buf.length + " bytes");
						//TODO ココで UDP で 送信
					}
					audioRec.stop();
				}
			}).start();
		}
	};
}

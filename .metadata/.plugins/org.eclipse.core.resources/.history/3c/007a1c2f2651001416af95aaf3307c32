package jp.smartdrive.android.sdk.v1.network.model;

import java.io.ByteArrayOutputStream;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Map;

import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.protocol.HTTP;

import android.util.Log;

import com.google.gson.Gson;

import jp.smartdrive.android.sdk.v1.SmartDriveConfig;
import jp.smartdrive.android.sdk.v1.model.CarData;
import jp.smartdrive.android.sdk.v1.model.User;

@SuppressWarnings("serial")
public class AddDeviceRequest extends Request{
	private static String TAG = "AddDeviceRequest";
	

	private String deviceCode; //required
	private int userCarId; // (not required)分かる場合はこれが一番いい。これがあれば、car_dataパラメーターはいらない。
	private String vin; //not required
	private CarData carData;
	
	public AddDeviceRequest(User user,String deviceCode,int userCarId,String vin,CarData carData) {
		super(REQUEST_METHOD_TYPE.POST);
		this.setUser(user);
		
		this.setDeviceCode(deviceCode);
		this.setUserCarId(userCarId);
		this.setVin(vin);
		this.setCarData(carData);
	}

	@Override
	public Response doInBackground() {
		//リクエストを送信先		
		String url = SmartDriveConfig.API_SERVER_HOST
					+ SmartDriveConfig.API_VERSION
					+ SmartDriveConfig.API_ADD_DRIVE;
		//リクエストURLを作成
		User user = this.getUser();
		url = url.replace(":user_id", String.valueOf(user.getId()) );
		Log.d(TAG, "url:"+url);
		
		//URLをリクエストに設定
		HttpPost req = new HttpPost(url);
		
		StringEntity entity = null;
		try {
			Map<String,Object> src = new HashMap<String, Object>();
			src.put("device_code", this.getDeviceCode());
			src.put("user_car_id", this.getUserCarId());
			src.put("vin", this.getVin());
			src.put("car_data", this.getCarData());
			
			Gson gson = new Gson();
			String json = gson.toJson(src);
			Log.d(TAG, "json:"+json);
			
			entity = new StringEntity( json, HTTP.UTF_8);
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		if(entity == null){
			//Body部分を作れなかった場合
			Response resp = new Response(Response.STATUS_ERROR,500,null);
			return resp;
		}
		entity.setContentType("application/json");
		
		DefaultHttpClient httpClient = new DefaultHttpClient();		
		HttpResponse httpResp = null;
		try {
			//アクセストークンをヘッダーに設定
			req.setHeader( "Authorization", "Bearer "+user.getAccessToken() );			
			httpResp = httpClient.execute(req);
		} catch (Exception e) {
		    Log.e(TAG, "Error Execute");
		}
		if(httpResp == null) return null;
		
		Response resp = null;
		ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
		//ステータスコード取得
		int status = httpResp.getStatusLine().getStatusCode();
		Log.d(TAG, "status:"+status);
		try {
			//レスポンスを取得
	        httpResp.getEntity().writeTo(outputStream);
	        Log.d(TAG, "body:"+outputStream.toString());
	    } catch (Exception e) {
	        Log.e(TAG, "Error");
	    }
		
		if((HttpStatus.SC_OK == status)
			|| (HttpStatus.SC_CREATED == status)){
			//リクエスト成功
			try {
		        resp = new AddDeviceResponse(outputStream.toString());
		    } catch (Exception e) {
		        Log.e(TAG, "Error");
		    }
		}else{
			//200 以外のレスポンスの場合
			resp = new Response(Response.STATUS_ERROR,status,null);
		}
		return resp;
	}

	public String getDeviceCode() {
		return deviceCode;
	}

	public void setDeviceCode(String deviceCode) {
		this.deviceCode = deviceCode;
	}

	public int getUserCarId() {
		return userCarId;
	}

	public void setUserCarId(int userCarId) {
		this.userCarId = userCarId;
	}

	public String getVin() {
		return vin;
	}

	public void setVin(String vin) {
		this.vin = vin;
	}

	public CarData getCarData() {
		return carData;
	}

	public void setCarData(CarData carData) {
		this.carData = carData;
	}
}
